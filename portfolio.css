@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@600&display=swap");

#content {
  position: relative;
}

img {
  max-width: 100%;
  height: auto;
  border-radius: 8px;
}

body {
  background-image: url("./03-Dashboard-bg.png");
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  background-attachment: fixed; /* âœ… This fixes the background in place */
  height: 100vh;
  margin: 0;
}

/* Hover Image */
.hover-image {
  position: fixed;
  top: 50%;
  right: -30px;
  transform: translateY(-50%);
  transition: right 0.4s ease;
  z-index: 1000;
}

.hover-image img {
  height: 150px;
  display: block;
  cursor: pointer;
}

.hover-image:hover {
  right: -20px;
}

/* Top Bar */
.top-bar {
  height: 60px;
  background-color: #000e47;
  color: #fff;
  overflow: hidden;
  padding: 0 20px;
  box-sizing: border-box;
  border: 2px dotted #fedf08;
  border-radius: 4px;
  display: flex;
  align-items: center;
  font-family: "Pixelify Sans", sans-serif;
  font-weight: 600;
  flex: 1;
}

.top-bar marquee {
  line-height: 24px;
}

/* Scrolling Text */
.scrolling-text-wrapper {
  overflow: hidden;
  white-space: nowrap;
  width: 100%;
}

.scrolling-text {
  display: inline-block;
  padding-left: 100%;
  animation: scroll-left 30s linear infinite;
  font-size: 16px;
  line-height: 60px;
}

@keyframes scroll-left {
  0% {
    transform: translateX(0%);
  }
  100% {
    transform: translateX(-100%);
  }
}

/* Exit Button */
.img-only-button {
  background: none;
  border: none;
  padding: 0;
  cursor: pointer;
  border-radius: 0px;
}

.img-only-button img {
  width: 85px;
  height: auto;
  display: block;
  border-radius: 0px;
}

.exit-button:hover {
  box-shadow: 0 0 12px 4px rgba(0, 255, 0, 0.6);
}

/* Grid + Cards */
.top-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
}

.top-wrapper {
  position: fixed;
  top: 40px;
  left: 50%;
  transform: translateX(-50%);
  width: 80%;
  max-width: 1200px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  z-index: 999;
  gap: 20px; /* spacing between bar and button */
}

.exit-button {
  height: 60px;
  display: flex;
  align-items: center;
}

.now-showing-bar {
  position: sticky;
  top: 120px; /* sticks 120px below the top */
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: url("./nowshowingbg.png") no-repeat center/cover;
  padding: 40px 40px;
  width: 90%;
  max-width: 900px;
  height: 60px;
  z-index: 998;
  transition: opacity 0.2s linear; /* smooth fade */
  opacity: 1; /* default visible */
}


.now-showing {
  font-family: "AmericanTypewriter", sans-serif;
  font-weight: 600;
  font-size: 20px;
}

.portfolio-label {
  font-family: "AmericanTypewriter", sans-serif;
  font-weight: 600;
  font-size: 30px;
}

/* Grid Layout */
.portfolio-grid {
  display: grid;
  grid-template-columns: 1fr;
  gap: 20px;
  max-width: 900px;
  margin: 200px auto 0; /* push grid below Now Showing bar */
  padding: 20px;
}

.portfolio-item {
  overflow: hidden;
  border-radius: 6px;
}

.portfolio-image {
  position: relative;
}

.portfolio-image img {
  width: 100%;
  height: auto;
  display: block;
}

/* Info box hidden initially */
.portfolio-info {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 14, 71, 0.9);
  color: white;
  opacity: 0;
  padding: 20px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  transition: opacity 0.4s ease-in-out;
}

/* Show on hover */
.portfolio-image:hover .portfolio-info {
  opacity: 1;
}

.portfolio-info h2 {
  margin: 0;
}

.subtitle {
  color: #fedf08;
  font-weight: bold;
}

.release-date {
  margin-top: 20px;
  font-size: 0.9rem;
}

/* Responsive */
@media (min-width: 768px) {
  .portfolio-grid {
    grid-template-columns: 1fr 1fr;
  }
}

<script>
  const nowShowingBar = document.querySelector('.now-showing-bar');

  window.addEventListener('scroll', () => {
    const rect = nowShowingBar.getBoundingClientRect();

    // The more it scrolls past, the more it fades
    if (rect.top <= 0) {
      const fadeDistance = 60; // pixels over which it fades
      const scrolled = Math.min(Math.abs(rect.top), fadeDistance);
      nowShowingBar.style.opacity = 1 - (scrolled / fadeDistance);
    } else {
      nowShowingBar.style.opacity = 1; // fully visible when not past top
    }
  });
</script>
